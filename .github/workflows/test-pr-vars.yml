name: Docker Build Workflow

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            base-ubuntu18: base-images/ubuntu/ubuntu18-dockerfile
            base-ubuntu20: base-images/ubuntu/ubuntu20-dockerfile
            base-ubuntu22: base-images/ubuntu/ubuntu22-dockerfile
            base-ubuntu24: base-images/ubuntu/ubuntu24-dockerfile
            base-centos7: base-images/centos/centos7-dockerfile
            base-centos8: base-images/centos/centos8-dockerfile
            base-rhel7: base-images/rhel/rhel7-dockerfile
            base-rhel8: base-images/rhel/rhel8-dockerfile
            base-rhel9: base-images/rhel/rhel9-dockerfile
            ci-ubuntu18: ci-images/ubuntu/ubuntu18-dockerfile
            ci-ubuntu20: ci-images/ubuntu/ubuntu20-dockerfile
            ci-ubuntu22: ci-images/ubuntu/ubuntu22-dockerfile
            ci-ubuntu24: ci-images/ubuntu/ubuntu24-dockerfile
            ci-centos7: ci-images/centos/centos7-dockerfile
            ci-centos8: ci-images/centos/centos8-dockerfile
            ci-rhel7: ci-images/rhel/rhel7-dockerfile
            ci-rhel8: ci-images/rhel/rhel8-dockerfile
            ci-rhel9: ci-images/rhel/rhel9-dockerfile
            runner-ubuntu18: runner-images/ubuntu/ubuntu18-dockerfile
            runner-ubuntu20: runner-images/ubuntu/ubuntu20-dockerfile
            runner-ubuntu22: runner-images/ubuntu/ubuntu22-dockerfile
            runner-ubuntu24: runner-images/ubuntu/ubuntu24-dockerfile
            runner-centos7: runner-images/centos/centos7-dockerfile
            runner-centos8: runner-images/centos/centos8-dockerfile
            runner-rhel7: runnerimages/rhel/rhel7-dockerfile
            runner-rhel8: runner-images/rhel/rhel8-dockerfile
            runner-rhel9: runner-images/rhel/rhel9-dockerfile

      - id: set-matrix
        run: |
          matrix=$(jq -n --argjson changes '${{ toJSON(steps.filter.outputs) }}' '{
            include: [
              {image_type: "base", os_type: "ubuntu", version: "18"}|select($changes["base-ubuntu18"] == "true"),
              {image_type: "base", os_type: "ubuntu", version: "20"}|select($changes["base-ubuntu20"] == "true"),
              {image_type: "base", os_type: "ubuntu", version: "22"}|select($changes["base-ubuntu22"] == "true"),
              {image_type: "base", os_type: "ubuntu", version: "24"}|select($changes["base-ubuntu24"] == "true"),
              {image_type: "base", os_type: "centos", version: "7"}|select($changes["base-centos7"] == "true"),
              {image_type: "base", os_type: "centos", version: "8"}|select($changes["base-centos8"] == "true"),
              {image_type: "base", os_type: "rhel", version: "7"}|select($changes["base-rhel7"] == "true"),
              {image_type: "base", os_type: "rhel", version: "8"}|select($changes["base-rhel8"] == "true"),
              {image_type: "base", os_type: "rhel", version: "9"}|select($changes["base-rhel9"] == "true"),
              {image_type: "ci", os_type: "ubuntu", version: "18"}|select($changes["ci-ubuntu18"] == "true"),
              {image_type: "ci", os_type: "ubuntu", version: "20"}|select($changes["ci-ubuntu20"] == "true"),
              {image_type: "ci", os_type: "ubuntu", version: "22"}|select($changes["ci-ubuntu22"] == "true"),
              {image_type: "ci", os_type: "ubuntu", version: "24"}|select($changes["ci-ubuntu24"] == "true"),
              {image_type: "ci", os_type: "centos", version: "7"}|select($changes["ci-centos7"] == "true"),
              {image_type: "ci", os_type: "centos", version: "8"}|select($changes["ci-centos8"] == "true"),
              {image_type: "ci", os_type: "rhel", version: "7"}|select($changes["ci-rhel7"] == "true"),
              {image_type: "ci", os_type: "rhel", version: "8"}|select($changes["ci-rhel8"] == "true"),
              {image_type: "ci", os_type: "rhel", version: "9"}|select($changes["ci-rhel9"] == "true"),
              {image_type: "runner", os_type: "ubuntu", version: "18"}|select($changes["runner-ubuntu18"] == "true"),
              {image_type: "runner", os_type: "ubuntu", version: "20"}|select($changes["runner-ubuntu20"] == "true"),
              {image_type: "runner", os_type: "ubuntu", version: "22"}|select($changes["runner-ubuntu22"] == "true"),
              {image_type: "runner", os_type: "centos", version: "7"}|select($changes["runner-centos7"] == "true"),
              {image_type: "runner", os_type: "centos", version: "8"}|select($changes["runner-centos8"] == "true"),
              {image_type: "runner", os_type: "rhel", version: "7"}|select($changes["runner-rhel7"] == "true"),
              {image_type: "runner", os_type: "rhel", version: "8"}|select($changes["runner-rhel8"] == "true"),
              {image_type: "runner", os_type: "rhel", version: "9"}|select($changes["runner-rhel9"] == "true")
            ] | map(select(.))
          }')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build:
    needs: detect-changes
    if: ${{ fromJson(needs.detect-changes.outputs.matrix).include[0] }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: Generate Docker image variables
        id: docker_vars
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          IMAGE_NAME="myorg/${{ matrix.image_type }}-${{ matrix.os_type }}${{ matrix.version }}"
          TAG="${IMAGE_NAME}:${TIMESTAMP}"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          echo "Building Docker image: ${{ steps.docker_vars.outputs.TAG }}"
          echo "Dockerfile: ${{ matrix.image_type }}-images/${{ matrix.os_type }}/${{ matrix.os_type }}${{ matrix.version }}-dockerfile"
          docker build -t ${{ steps.docker_vars.outputs.TAG }} \
            -f ${{ matrix.image_type }}-images/${{ matrix.os_type }}/${{ matrix.os_type }}${{ matrix.version }}-dockerfile .

      # Add more steps as needed, such as pushing the images to a registry