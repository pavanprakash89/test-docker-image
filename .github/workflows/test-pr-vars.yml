name: Docker Build Workflow

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            base-ubuntu18: base-images/ubuntu/ubuntu18-dockerfile
            base-ubuntu20: base-images/ubuntu/ubuntu20-dockerfile
            base-ubuntu22: base-images/ubuntu/ubuntu22-dockerfile
            base-ubuntu24: base-images/ubuntu/ubuntu24-dockerfile
            base-centos7: base-images/centos/centos7-dockerfile
            base-centos8: base-images/centos/centos8-dockerfile
            base-rhel7: base-images/rhel/rhel7-dockerfile
            base-rhel8: base-images/rhel/rhel8-dockerfile
            base-rhel9: base-images/rhel/rhel9-dockerfile
            ci-ubuntu18: ci-images/ubuntu/ubuntu18-ci-dockerfile
            ci-ubuntu20: ci-images/ubuntu/ubuntu20-ci-dockerfile
            ci-ubuntu22: ci-images/ubuntu/ubuntu22-ci-dockerfile
            ci-ubuntu24: ci-images/ubuntu/ubuntu24-ci-dockerfile
            ci-centos7: ci-images/centos/centos7-ci-dockerfile
            ci-centos8: ci-images/centos/centos8-ci-dockerfile
            ci-rhel7: ci-images/rhel/rhel7-ci-dockerfile
            ci-rhel8: ci-images/rhel/rhel8-ci-dockerfile
            ci-rhel9: ci-images/rhel/rhel9-ci-dockerfile
            runner-ubuntu18: runner-images/ubuntu/ubuntu18-runner-dockerfile
            runner-ubuntu20: runner-images/ubuntu/ubuntu20-runner-dockerfile
            runner-ubuntu22: runner-images/ubuntu/ubuntu22-runner-dockerfile
            runner-ubuntu24: runner-images/ubuntu/ubuntu24-runner-dockerfile
            runner-centos7: runner-images/centos/centos7-runner-dockerfile
            runner-centos8: runner-images/centos/centos8-runner-dockerfile
            runner-rhel7: runnerimages/rhel/rhel7-runner-dockerfile
            runner-rhel8: runner-images/rhel/rhel8-runner-dockerfile
            runner-rhel9: runner-images/rhel/rhel9-runner-dockerfile

      - id: set-matrix
        run: |
          MATRIX=""
          for change in $(echo '${{ toJSON(steps.filter.outputs) }}' | jq -r 'to_entries | .[] | select(.value == "true") | .key'); do
            IFS='-' read -r image_type os_type <<< "$change"
            if [[ "$os_type" == "rhel"* ]]; then
              version="${os_type:4}"
              os_type="rhel"
            elif [[ "$os_type" == "ubuntu"* || "$os_type" == "centos"* ]]; then
              version="${os_type:6}"
              os_type="${os_type:0:6}"
            else
              echo "Unknown OS type: $os_type"
              continue
            fi
            MATRIX="${MATRIX}{\"image_type\":\"$image_type\",\"os_type\":\"$os_type\",\"version\":\"$version\"},"
          done
          MATRIX="[${MATRIX%,}]"
          echo "matrix={\"include\":$MATRIX}"
          echo "matrix={\"include\":$MATRIX}" >> $GITHUB_OUTPUT

  build:
    needs: detect-changes
    if: ${{ fromJson(needs.detect-changes.outputs.matrix).include[0] }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: Generate Docker image variables
        id: docker_vars
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          IMAGE_NAME="myorg/${{ matrix.image_type }}-${{ matrix.os_type }}${{ matrix.version }}"
          TAG="${IMAGE_NAME}:${TIMESTAMP}"
          echo "IMAGE_NAME=$IMAGE_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "TAG=$TAG"
          echo "TAG=$TAG" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          echo "Building Docker image: ${{ steps.docker_vars.outputs.TAG }}"
          echo "Dockerfile: ${{ matrix.image_type }}-images/${{ matrix.os_type }}/${{ matrix.os_type }}${{ matrix.version }}-dockerfile"
          docker build -t ${{ steps.docker_vars.outputs.TAG }} \
            -f ${{ matrix.image_type }}-images/${{ matrix.os_type }}/${{ matrix.os_type }}${{ matrix.version }}-dockerfile .

      # Add more steps as needed, such as pushing the images to a registry